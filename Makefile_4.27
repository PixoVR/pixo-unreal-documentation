
UE_ENGINE = /mnt/c/Program Files/Epic Games/UE_4.27/Engine
WUE_ENGINE = C:\\Program\ Files\\Epic\ Games\\UE_4.27\\Engine

# run
UECMD = ./Binaries/Win64/UE4Editor-Cmd.exe
COMMANDLET = PixoDocumentation
#PROJECT = X:\PixoVR\Documentation_4_27\Documentation_4_27.uproject
#PROJECT = X:\PixoVR\CE_Pigging\CE_Pigging.uproject
PROJECT = X:\PixoVR\documentation\docs-docker-ue4-base\project\UE4\Documentation_4_27.uproject
#LOGGING = -LogCmds="global none, LOG_DOT all" -NoLogTimes
LOGGING =
#OUTPUT_DIR = X:\PixoVR\documentation\docs-root\documentation\pages\blueprints
#OUTPUT_DIR = X:\PixoVR\dev\SDKs\UnrealEngineSDK\documentation\generated
OUTPUT_DIR = X:\PixoVR\temp\docs
OUTPUT_MODE ?= doxygen
#INCLUDE = /PixoDocumentation	#can be a comma list
#INCLUDE = /PixoCore,/PixoLobby,/PixoTutorial
INCLUDE = /PixoCore,/PixoLobby

# build
UATCMD = Build\\BatchFiles\\RunUAT.bat
PLUGIN_ROOT = X:\\PixoVR\\Documentation_4_27\\Plugins\\pixo-unreal-documentation\\
PLUGIN = $(PLUGIN_ROOT)\\PixoDocumentation.uplugin
PLATFORM = Win64
#PACKAGE = X:\\PixoVR\\dev\\SDKs\\temp
PACKAGE = C:\\temp\\build

all: run

build:
	@cmd.exe /k $(WUE_ENGINE)\\$(UATCMD) BuildPlugin -plugin="$(PLUGIN)" -package="$(PACKAGE)" -TargetPlatforms=$(PLATFORM) && exit || exit

run:
	@make commandlet OUTPUT_MODE=doxygen

debug:
	@make commandlet OUTPUT_MODE=debug 

verbose:
	@make commandlet OUTPUT_MODE=verbose

commandlet:
	@cd "$(UE_ENGINE)" && $(UECMD) "$(PROJECT)" -run=$(COMMANDLET) $(LOGGING) -OutputMode=$(OUTPUT_MODE) -OutputDir="$(OUTPUT_DIR)" -Include="$(INCLUDE)" || true

